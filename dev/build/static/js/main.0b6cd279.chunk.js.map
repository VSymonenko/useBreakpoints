{"version":3,"sources":["FunctionalComponent.js","../index.js","App.js","index.js"],"names":["Component","breakpoints","arg","arguments","length","undefined","xs","min","max","sm","md","lg","xl","_useState","Object","react","_useState2","slicedToArray","points","setBreakpoints","handleResize","prop","hasOwnProperty","Error","concat","window","innerWidth","screen","keys","filter","toString","addEventListener","removeEventListener","useBreakpoints","extraSmall","small","medium","large","extraLarge","react_default","a","createElement","App","className","ReactDOM","render","src_App","document","getElementById"],"mappings":"8KAGe,SAASA,IACtB,IAuBMC,ECzBO,WACf,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,IAGAG,GAAA,CACAC,IAAA,EACAC,IAAA,KAEAC,GAAA,CACAF,IAAA,IACAC,IAAA,KAEAE,GAAA,CACAH,IAAA,IACAC,IAAA,MAEAG,GAAA,CACAJ,IAAA,KACAC,IAAA,MAEAI,GAAA,CACAL,IAAA,KACAC,IAAA,OAIAK,EAAkBC,OAAAC,EAAA,SAAAD,CAAQ,IAC1BE,EAAmBF,OAAAG,EAAA,EAAAH,CAAcD,EAAA,GACjCK,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAEAf,EAAA,GAEAmB,EAAA,WACA,QAAAC,KAAAnB,EAAA,CAGA,IAAAA,EAAAmB,GAAAC,eAAA,SAAApB,EAAAmB,GAAAC,eAAA,OAQA,UAAAC,MAAA,GAAAC,OAAAH,EAAA,sCAPAnB,EAAAmB,GAAAb,IACAP,EAAAoB,GAAAnB,EAAAmB,GAAAb,IAAAiB,OAAAC,YAAAxB,EAAAmB,GAAAd,IAAAkB,OAAAC,WAGAzB,EAAAoB,GAAAnB,EAAAmB,GAAAd,IAAAkB,OAAAC,WAQAzB,EAAA0B,OAAAb,OAAAc,KAAA3B,GAAA4B,OAAA,SAAAR,GACA,OAAApB,EAAAoB,QACKS,WACLX,EAAAlB,IAgBA,OAZEa,OAAAC,EAAA,UAAAD,CAAS,WACX,OAAAM,KACG,IAEDN,OAAAC,EAAA,UAAAD,CAAS,WAIX,OAHAW,OAAAM,iBAAA,SAAAX,GAGA,WACAK,OAAAO,oBAAA,SAAAZ,MAGAF,ED5CsBe,CAvBP,CACXC,WAAY,CACV3B,IAAK,EACLC,IAAK,KAEP2B,MAAO,CACL5B,IAAK,IACLC,IAAK,KAEP4B,OAAQ,CACN7B,IAAK,IACLC,IAAK,MAEP6B,MAAO,CACL9B,IAAK,KACLC,IAAK,MAEP8B,WAAY,CACV/B,IAAK,KACLC,IAAK,QAKT,OACE+B,EAAAC,EAAAC,cAAA,sBAAcxC,EAAY0B,YEhBfe,mLARX,OACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACzC,EAAD,cAJUA,aCClB4C,IAASC,OAAON,EAAAC,EAAAC,cAACK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0b6cd279.chunk.js","sourcesContent":["import React from 'react'\r\nimport useBreakpoints from './../index'\r\n\r\nexport default function Component() {\r\n  const test = {\r\n    extraSmall:\t{\r\n      min: 0,\r\n      max: 600\r\n    },\r\n    small: {\r\n      min: 601,\r\n      max: 960\r\n    },\r\n    medium: {\r\n      min: 961,\r\n      max: 1024\r\n    },\r\n    large: {\r\n      min: 1025,\r\n      max: 1280\r\n    },\r\n    extraLarge: {\r\n      min: 1281,\r\n      max: null\r\n    },\r\n  }\r\n\r\n  const breakpoints = useBreakpoints(test)\r\n  return(\r\n    <div>screen: {breakpoints.screen}</div>\r\n  )\r\n}","import _slicedToArray from \"C:\\\\4\\\\useBreakpoints\\\\dev\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nexport default function useBreakpoints() {\n  var arg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    // default property\n    // TODO: improve most popular screen resolution\n    xs: {\n      min: 0,\n      max: 600\n    },\n    sm: {\n      min: 601,\n      max: 960\n    },\n    md: {\n      min: 961,\n      max: 1024\n    },\n    lg: {\n      min: 1025,\n      max: 1500\n    },\n    xl: {\n      min: 1501,\n      max: null\n    }\n  };\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      points = _useState2[0],\n      setBreakpoints = _useState2[1];\n\n  var breakpoints = {};\n\n  var handleResize = function handleResize() {\n    for (var prop in arg) {\n      // Determine whether an object has the specified property as a direct property.\n      // Property must have min and max.\n      if (arg[prop].hasOwnProperty('min') && arg[prop].hasOwnProperty('max')) {\n        if (arg[prop].max) {\n          breakpoints[prop] = arg[prop].max > window.innerWidth && arg[prop].min < window.innerWidth;\n        } else {\n          // For maximum without limit.\n          breakpoints[prop] = arg[prop].min < window.innerWidth;\n        }\n      } else {\n        throw new Error(\"\".concat(prop, \" must have properties min and max\"));\n      }\n    } // get name for screen resolution\n\n\n    breakpoints.screen = Object.keys(breakpoints).filter(function (prop) {\n      return breakpoints[prop] && prop;\n    }).toString();\n    setBreakpoints(breakpoints);\n  }; // Pass empty array to only run once on mount\n\n\n  useEffect(function () {\n    return handleResize();\n  }, []); // simulate componentDidMount and componentDidUpdate.\n\n  useEffect(function () {\n    window.addEventListener('resize', handleResize); // simulate componentWillUnmount react lifecycle hook.\n    // Every effect may return a function that cleans up after it. This is optional.\n\n    return function () {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n  return points;\n}","import React, { Component } from 'react';\r\nimport ComponentFunctional from './FunctionalComponent'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <ComponentFunctional />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}