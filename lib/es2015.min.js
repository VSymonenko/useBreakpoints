"use strict";var _react=require("react");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=useBreakpoints;function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{d||null==h["return"]||h["return"]()}finally{if(e)throw f}}return c}function _arrayWithHoles(a){if(Array.isArray(a))return a}function useBreakpoints(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{// default property
// TODO: improve most popular screen resolution
xs:{min:0,max:600},sm:{min:601,max:960},md:{min:961,max:1024},lg:{min:1025,max:1500},xl:{min:1501,max:null}},b=(0,_react.useState)({}),c=_slicedToArray(b,2),d=c[0],e=c[1],f={},g=function(){for(var b in a)// Determine whether an object has the specified property as a direct property.
// Property must have min and max.
if(a[b].hasOwnProperty("min")&&a[b].hasOwnProperty("max"))f[b]=a[b].max?a[b].max>window.innerWidth&&a[b].min<window.innerWidth:a[b].min<window.innerWidth;else throw new Error("".concat(b," must have properties min and max"));// get name for screen resolution
f.screen=Object.keys(f).filter(function(a){return f[a]&&a}).toString(),e(f)};return(0,_react.useEffect)(function(){return g()},[]),(0,_react.useEffect)(function(){// simulate componentWillUnmount react lifecycle hook.
// Every effect may return a function that cleans up after it. This is optional.
return window.addEventListener("resize",g),function(){window.removeEventListener("resize",g)}}),d}
